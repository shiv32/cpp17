/*

RAII (Resource Acquisition Is Initialization) in C++
    RAII (Resource Acquisition Is Initialization) is a programming idiom in C++ that binds the lifetime of 
    resources (e.g., memory, file handles, mutexes, sockets) to the lifetime of objects.

    With RAII, resources are acquired in the constructor and released in the destructor, ensuring proper cleanup 
    and preventing resource leaks.

Why Use RAII?
    Automatic resource management (no need to manually release resources).
    Exception safety (resources are always released, even if an exception occurs).
    Prevents memory leaks and resource mismanagement.


üîÅ Rephrased:
    Getting a resource = Initializing an object

Or more fully:
    When an object is initialized (created), it also acquires a resource. 
    When the object is destroyed (goes out of scope), the resource is automatically released.

So RAII means:
    Acquire resource when object is created (via constructor)
    Release resource when object is destroyed (via destructor)

*/