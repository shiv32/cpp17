âœ… Project: Generic Event Dispatcher

ðŸ“Œ Description:
A lightweight, extensible system that allows generic event publishing and subscribing using templates and classic design patterns.

ðŸŽ¯ Design Patterns Used:
    Template-Based Observer Pattern â€“ Generic observer system using templates.
    Singleton â€“ Centralized event dispatcher instance.
    Strategy (via template policy classes) â€“ Different dispatching strategies.
    Command â€“ Encapsulates event actions.
    Factory (optional) â€“ Dynamically create event handlers.

ðŸ›  Structure:

    EventDispatcher/
    â”œâ”€â”€ main.cpp
    â”œâ”€â”€ Event.hpp
    â”œâ”€â”€ Observer.hpp
    â”œâ”€â”€ Singleton.hpp
    â”œâ”€â”€ Command.hpp
    â””â”€â”€ Strategy.hpp


âœ… Features:
    Easily extendable to support multiple event types
    Uses templates for generalization
    Combines Observer, Singleton, Command, and optionally Factory